name: Test Code

on:
  pull_request:
    branches:
    - feature/unit-tests
  push:
    branches:
    - feature/unit-tests

jobs:
  test-code:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

      # Steps taken from https://github.com/actions/cache/blob/master/examples.md#rust---cargo
    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2021-04-18
        components: rustfmt, clippy
        target: wasm32-unknown-unknown
        override: true
        default: true

    # Enable this for clippy linting.
    # - name: Check and Lint Code
    #   run: cargo +nightly-2020-05-07 clippy -- -D warnings

    #- name: Check Code
    #  run: cargo check

    #- name: Test Code
    #  run: cargo test

  set-tags:
    runs-on: ubuntu-latest
    outputs:
      git_ref: ${{ steps.check-git-ref.outputs.git_ref }}
      sha: ${{ steps.get-sha.outputs.sha }}
      sha8: ${{ steps.get-sha.outputs.sha8 }}
      polkadot_commit: ${{ steps.get-sha.outputs.polkadot_commit }}
    steps:
      - name: Check git ref
        id: check-git-ref
        run: |
          if [[ -n "${{ github.event.inputs.pull_request }}" ]]; then
            echo ::set-output name=git_ref::refs/pull/${{ github.event.inputs.pull_request }}/head
          else 
            echo ::set-output name=git_ref::$GITHUB_REF
          fi
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.check-git-ref.outputs.git_ref }}
      - name: Get Sha
        id: get-sha
        run: |
          echo ::set-output name=sha::$(git log -1 --format="%H")
          echo ::set-output name=sha8::$(git log -1 --format="%H" | cut -c1-8)
          echo ::set-output name=polkadot_commit::$(egrep -o '/polkadot.*#([^\"]*)' Cargo.lock | \
            head -1 | sed 's/.*#//' |  cut -c1-8)
      - name: Display variables
        run: |
          echo git_ref: ${{ steps.check-git-ref.outputs.git_ref }}
          echo sha: ${{ steps.get-sha.outputs.sha }}
          echo sha8: ${{ steps.get-sha.outputs.sha8 }}
  
  build:
    runs-on: ubuntu-latest
    needs: ["set-tags"]
    env:
      RUSTFLAGS: "-C opt-level=3"
    outputs:
      RUSTC: ${{ steps.get-rust-versions.outputs.rustc }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.set-tags.outputs.git_ref }}

      # With rustup's nice new toml format, we just need to run rustup show to install the toolchain
      # https://github.com/actions-rs/toolchain/issues/126#issuecomment-782989659
      - name: Setup Rust toolchain
        run: rustup show
      - id: get-rust-versions
        run: |
          echo "::set-output name=rustc::$(rustc --version)"
      - name: Build Node
        run: |
          env
          cargo build --release --all
      - name: Verify node version
        run: |
          GIT_COMMIT=`git log -1 --format="%H" | cut -c1-7`
          MB_VERSION=`./target/release/origintrail-parachain --version`
          echo "Checking $MB_VERSION contains $GIT_COMMIT"
          echo "$MB_VERSION" | grep $GIT_COMMIT
      #- name: Unit tests
      #  run: cargo test --release --all
      #- name: Check with Clippy
      #  run: cargo clippy --release --workspace
      #- name: Ensure benchmarking compiles
      #  run: cargo check --release --features=runtime-benchmarks
      - name: Save parachain binary
        run: |
          mkdir -p build
          cp target/release/origintrail-parachain build/origintrail-parachain;
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Typescript integration tests (against dev service)
        env:
          BINARY_PATH: build/origintrail-parachain
        run: |
          chmod uog+x build/origintrail-parachain
          cd tests/ts-tests
          npm install
          node_modules/.bin/mocha --parallel -j 7 -r ts-node/register 'tests/ts-tests/**/test-*.ts'
